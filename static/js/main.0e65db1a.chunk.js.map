{"version":3,"sources":["components/MarkdownPreviewer.module.scss","components/MarkdownPreviewer.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","marked","setOptions","breaks","MarkdownPreviewer","props","state","input","placeholder","onInputChange","bind","e","this","setState","target","value","className","s","previewerWrapper","title","editor","id","onChange","preview","dangerouslySetInnerHTML","__html","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,iBAAmB,4CAA4C,MAAQ,iCAAiC,OAAS,kCAAkC,QAAU,qC,8MCI/KC,IAAOC,WAAW,CACdC,QAAQ,I,IAGNC,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CACPC,MAAOC,GAEX,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBALP,E,iDAQlB,SAAcC,GACVC,KAAKC,SAAS,CACVN,MAAOI,EAAEG,OAAOC,U,oBAIxB,WACI,OACI,sBAAKC,UAAWC,IAAEC,iBAAlB,UACQ,qBAAKF,UAAWC,IAAEE,MAAlB,oBACA,qBAAKH,UAAWC,IAAEE,MAAlB,qBACA,0BAAUH,UAAWC,IAAEG,OAAQC,GAAG,SAAUC,SAAUV,KAAKH,cAAcC,KAAKE,MAA9E,SAAsFA,KAAKN,MAAMC,QACjG,qBAAKS,UAAWC,IAAEM,QAASF,GAAG,UAAUG,wBAAyB,CAACC,OAAOxB,IAAOW,KAAKN,MAAMC,iB,GArB/EmB,IAAMC,WAgChCnB,EAAW,s6BAsDFJ,ICpFAwB,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCMSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OAEP,cAAC,EAAD,IAASC,SAASC,eAAe,SAMnCZ,M","file":"static/js/main.0e65db1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewerWrapper\":\"MarkdownPreviewer_previewerWrapper__33reo\",\"title\":\"MarkdownPreviewer_title__3XO7G\",\"editor\":\"MarkdownPreviewer_editor__2sjp3\",\"preview\":\"MarkdownPreviewer_preview__3Kgzf\"};","import React from 'react';\r\nimport marked from 'marked';\r\nimport s from './MarkdownPreviewer.module.scss';\r\n\r\n\r\nmarked.setOptions({\r\n    breaks: true\r\n  });\r\n\r\nclass MarkdownPreviewer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            input: placeholder\r\n        }\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n\r\n    }\r\n    onInputChange(e){\r\n        this.setState({\r\n            input: e.target.value\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className={s.previewerWrapper}>\r\n                    <div className={s.title}>Editor</div>\r\n                    <div className={s.title}>Preview</div> \r\n                    <textarea className={s.editor} id=\"editor\"  onChange={this.onInputChange.bind(this)}>{this.state.input}</textarea>\r\n                    <div className={s.preview} id=\"preview\" dangerouslySetInnerHTML={{__html:marked(this.state.input)}}></div>\r\n                             \r\n                \r\n             \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst placeholder = `# Hello! it is a Project for FreeCodeCamp React certification!\r\n\r\n## It is using marked library\r\n### Markdown is a simple text format whose goal is to be very easy to read and write, even when not converted to HTML\r\n\r\nHow we can use it:\r\n\r\n\r\n1.this is code:  \\`<div></div>\\`, between 2 backticks.\r\n\r\n2.multi-line code:\r\n\\`\\`\\`\r\nconst helloWorld = () =>{\r\n    console.log(\"Hello World!);\r\n};\r\n\\`\\`\\`\r\n\r\n3.**bold** text\r\n\r\n4._italic_ one\r\n\r\n5.**_we can mix them_**\r\n\r\n6.~~strikethrough text~~\r\n\r\n7.[links](https://www.freecodecamp.com)\r\n\r\n8.Even \r\n> Block Quotes\r\n\r\n9.Table\r\n\r\nHeader | One more Header | again Header\r\n------ | ----------------| -------------\r\nText | Text | Text\r\nText | Text | Text\r\n\r\n10.Bulleted list:\r\n- Here.\r\n  - Are.\r\n    - Different.\r\n        - Levels.\r\n\r\n11.Numbered lists:\r\n\r\n1. Numbererd\r\n1. List\r\n1. !!!\r\n\r\n12.and meet **Image**\r\n\r\n![Logo](https://i.pinimg.com/736x/5a/1b/1e/5a1b1e32639c6210416804dc7a93ef8e.jpg)\r\n`;\r\n\r\nexport default MarkdownPreviewer;","import './App.css';\nimport MarkdownPreviewer from './components/MarkdownPreviewer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MarkdownPreviewer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render (\n  \n  <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}